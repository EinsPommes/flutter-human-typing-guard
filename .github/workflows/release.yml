name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  release-dart:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: |
        cd packages/human_typing_guard
        flutter pub get
        
    - name: Run tests
      run: |
        cd packages/human_typing_guard
        flutter test
        
    - name: Analyze project
      run: |
        cd packages/human_typing_guard
        flutter analyze --fatal-infos
        
    - name: Check pub publish
      run: |
        cd packages/human_typing_guard
        flutter pub publish --dry-run
        
    - name: Publish to pub.dev
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        cd packages/human_typing_guard
        flutter pub publish --force
      env:
        PUB_TOKEN: ${{ secrets.PUB_TOKEN }}

  release-rust:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-release-
          
    - name: Run tests
      run: |
        cd services/typing-guard-svc
        cargo test
        
    - name: Run clippy
      run: |
        cd services/typing-guard-svc
        cargo clippy --all-targets --all-features -- -D warnings
        
    - name: Check formatting
      run: |
        cd services/typing-guard-svc
        cargo fmt --all -- --check
        
    - name: Publish to crates.io
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        cd services/typing-guard-svc
        cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build-binaries:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        target:
          - ubuntu-latest: x86_64-unknown-linux-gnu
          - windows-latest: x86_64-pc-windows-msvc
          - macos-latest: x86_64-apple-darwin
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Add target
      run: rustup target add ${{ matrix.target }}
      
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-build-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-${{ matrix.target }}-
          
    - name: Build release binary
      run: |
        cd services/typing-guard-svc
        cargo build --release --target ${{ matrix.target }}
        
    - name: Create archive
      run: |
        cd services/typing-guard-svc/target/${{ matrix.target }}/release
        if [ "${{ runner.os }}" = "Windows" ]; then
          tar -czf typing-guard-svc-${{ matrix.target }}.tar.gz typing-guard-svc.exe
        else
          tar -czf typing-guard-svc-${{ matrix.target }}.tar.gz typing-guard-svc
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: typing-guard-svc-${{ matrix.target }}
        path: services/typing-guard-svc/target/${{ matrix.target }}/release/typing-guard-svc-*.tar.gz

  create-release:
    needs: [release-dart, release-rust, build-binaries]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create release notes
      id: release_notes
      run: |
        cat > release_notes.md << EOF
        ## What's Changed
        
        This release includes:
        
        - **Dart Package**: Published to pub.dev
        - **Rust Service**: Published to crates.io
        - **Pre-built Binaries**: Available for Linux, Windows, and macOS
        
        ## Installation
        
        ### Dart Package
        \`\`\`yaml
        dependencies:
          human_typing_guard: ^${VERSION#v}
        \`\`\`
        
        ### Rust Service
        \`\`\`bash
        cargo install typing-guard-svc
        \`\`\`
        
        ### Pre-built Binaries
        Download the appropriate binary for your platform from the assets below.
        
        ## Documentation
        
        - [API Specification](docs/api-spec.md)
        - [Human Heuristics](docs/human-heuristics.md)
        - [Privacy Guidelines](docs/privacy-and-ethics.md)
        - [Contributing Guide](docs/CONTRIBUTING.md)
        
        ## Security
        
        This release has been tested for security vulnerabilities and follows best practices for data protection.
        
        **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}
        EOF
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body_path: release_notes.md
        files: |
          typing-guard-svc-*/typing-guard-svc-*.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: |
        cd packages/human_typing_guard
        flutter pub get
        
    - name: Generate API documentation
      run: |
        cd packages/human_typing_guard
        dart doc --output docs/api
        
    - name: Deploy documentation
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: packages/human_typing_guard/docs/api
        destination_dir: api
